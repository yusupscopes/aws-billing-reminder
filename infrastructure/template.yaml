AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS Billing Reminder System

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - staging
      - prod
    Description: Environment name
  S3Bucket:
    Type: String
    Description: S3 bucket containing the Lambda function deployment package
  S3Key:
    Type: String
    Description: S3 key for the Lambda function deployment package
  EmailAddress:
    Type: String
    Description: Email address to receive billing alerts

Resources:
  # IAM Role for Lambda
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub aws-billing-reminder-${Environment}-lambda-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub aws-billing-reminder-${Environment}-logs-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
        - PolicyName: !Sub aws-billing-reminder-${Environment}-sns-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource: !Ref BillingAlertTopic
        - PolicyName: !Sub aws-billing-reminder-${Environment}-cost-explorer-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ce:GetCostAndUsageWithResources
                  - ce:GetCostAndUsage
                Resource: "*"

  BillingAlertFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub aws-billing-reminder-${Environment}
      Handler: app.main.handler
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Ref S3Key
      Runtime: python3.13
      Timeout: 30
      MemorySize: 256
      Architectures:
        - arm64
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          SNS_TOPIC_ARN: !Ref BillingAlertTopic
  
  BillingAlertLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/aws-billing-reminder-${Environment}"
      RetentionInDays: 7

  BillingAlertTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: AWS Billing Alert
      TopicName: aws-billing-alert

  BillingAlertTopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      TopicArn: !Ref BillingAlertTopic
      Endpoint: !Ref EmailAddress

  BillingAlertRule:
    Type: AWS::Events::Rule
    Properties:
      Name: aws-billing-reminder-rule
      Description: "Daily trigger for AWS billing alert"
      ScheduleExpression: "cron(0 22 * * ? *)" # 5 AM GMT+7 (22:00 UTC previous day)
      State: ENABLED
      Targets:
        - Arn: !GetAtt BillingAlertFunction.Arn
          Id: "BillingAlertLambda"

  BillingAlertPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref BillingAlertFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt BillingAlertRule.Arn